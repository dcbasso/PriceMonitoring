<?xml version="1.0" encoding="UTF-8"?>
<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
                   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                   xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog
          http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-4.7.xsd">

    <!-- BI START -->
    <changeSet id="createDimensionProductTable" author="Dante Basso">
        <createTable tableName="dimension_product">
            <column name="id" type="UUID">
                <constraints primaryKey="true" nullable="false"/>
            </column>
            <column name="product_name" type="VARCHAR(255)">
                <constraints nullable="false"/>
            </column>
            <column name="category" type="VARCHAR(255)">
                <constraints nullable="false"/>
            </column>
            <column name="master_category" type="VARCHAR(255)">
                <constraints nullable="false"/>
            </column>
            <column name="unique_product_code" type="VARCHAR(255)">
                <constraints nullable="false"/>
            </column>
            <column name="brand_id" type="UUID">
                <constraints nullable="false"/>
            </column>
        </createTable>
    </changeSet>

    <changeSet id="createDimensionStoreTable" author="Dante Basso">
        <createTable tableName="dimension_store">
            <column name="id" type="UUID">
                <constraints primaryKey="true" nullable="false"/>
            </column>
            <column name="name" type="VARCHAR(255)">
                <constraints nullable="false"/>
            </column>
        </createTable>
    </changeSet>

    <changeSet id="createDimensionBrandTable" author="Dante Basso">
        <createTable tableName="dimension_brand">
            <column name="id" type="UUID">
                <constraints primaryKey="true" nullable="false"/>
            </column>
            <column name="name" type="VARCHAR(255)">
                <constraints nullable="false"/>
            </column>
        </createTable>
    </changeSet>

    <changeSet id="createDimensionDateTimeTable" author="Dante Basso">
        <createTable tableName="dimension_date">
            <column name="id" type="UUID">
                <constraints primaryKey="true" nullable="false"/>
            </column>
            <column name="date" type="DATE">
                <constraints unique="true" nullable="false"/>
            </column>
            <column name="day" type="INT">
                <constraints nullable="false"/>
            </column>
            <column name="month" type="INT">
                <constraints nullable="false"/>
            </column>
            <column name="year" type="INT">
                <constraints nullable="false"/>
            </column>
            <column name="day_of_week" type="varchar(255)">
                <constraints nullable="false"/>
            </column>
            <column name="month_full" type="VARCHAR(255)">
                <constraints nullable="false"/>
            </column>
            <column name="month_year" type="VARCHAR(6)">
                <constraints nullable="false"/>
            </column>
            <column name="full_date" type="VARCHAR(8)">
                <constraints nullable="false"/>
            </column>
        </createTable>
    </changeSet>


    <changeSet id="createPriceHistoryTable" author="Dante Basso">
        <createTable tableName="price_history">
            <column name="id" type="UUID">
                <constraints nullable="false"/>
            </column>
            <column name="product_code" type="VARCHAR(255)">
                <constraints nullable="false"/>
            </column>
            <column name="brand" type="VARCHAR(255)">
                <constraints nullable="false"/>
            </column>
            <column name="product_id" type="UUID">
                <constraints nullable="false"/>
            </column>
            <column name="store_id" type="UUID">
                <constraints nullable="false"/>
            </column>
            <column name="date_id" type="UUID">
                <constraints nullable="false"/>
            </column>
            <column name="price" type="DECIMAL">
                <constraints nullable="false"/>
            </column>
            <column name="currency" type="VARCHAR(10)">
                <constraints nullable="false"/>
            </column>
            <column name="effective_date" type="TIMESTAMP">
                <constraints nullable="false"/>
            </column>
        </createTable>
        <addPrimaryKey tableName="price_history" columnNames="id"/>
        <addForeignKeyConstraint baseTableName="price_history" baseColumnNames="product_id"
                                 referencedTableName="dimension_product" referencedColumnNames="id"
                                 constraintName="fk_price_history_product"/>
        <addForeignKeyConstraint baseTableName="price_history" baseColumnNames="store_id"
                                 referencedTableName="dimension_store" referencedColumnNames="id"
                                 constraintName="fk_price_history_store"/>
        <addForeignKeyConstraint baseTableName="price_history" baseColumnNames="date_id"
                                 referencedTableName="dimension_date" referencedColumnNames="id"
                                 constraintName="fk_price_history_date"/>
        <addUniqueConstraint tableName="price_history"
                             columnNames="product_id, date_id"
                             constraintName="uk_price_history_product_date"/>
    </changeSet>

    <changeSet id="createDimensionCurrencyQuoteTable" author="Dante Basso">
        <createTable tableName="dimension_currency_quote">
            <column name="id" type="UUID">
                <constraints nullable="false"/>
            </column>
            <column name="date_id" type="UUID">
                <constraints nullable="false"/>
            </column>
            <column name="usd" type="DOUBLE">
                <constraints nullable="false"/>
            </column>
            <column name="eur" type="DOUBLE">
                <constraints nullable="false"/>
            </column>
            <column name="brl" type="DOUBLE">
                <constraints nullable="false"/>
            </column>
            <column name="ars" type="DOUBLE">
                <constraints nullable="false"/>
            </column>
            <column name="jpy" type="DOUBLE">
                <constraints nullable="false"/>
            </column>
            <column name="pyg" type="DOUBLE">
                <constraints nullable="false"/>
            </column>
            <column name="btc" type="DOUBLE">
                <constraints nullable="false"/>
            </column>
            <column name="eth" type="DOUBLE">
                <constraints nullable="false"/>
            </column>
            <column name="cny" type="DOUBLE">
                <constraints nullable="false"/>
            </column>
            <column name="effective_date" type="TIMESTAMP">
                <constraints nullable="false"/>
            </column>
        </createTable>

        <addPrimaryKey columnNames="id, date_id" constraintName="pk_dimension_currency_quote" tableName="dimension_currency_quote"/>
        <addForeignKeyConstraint
                baseTableName="dimension_currency_quote"
                baseColumnNames="date_id"
                referencedTableName="dimension_date" referencedColumnNames="id"
                constraintName="fk_dimension_currency_quote_dimension_date"
        />
        <addUniqueConstraint
                columnNames="date_id"
                constraintName="uk_dimension_currency_quote_date_id"
                tableName="dimension_currency_quote"
        />
    </changeSet>

    <changeSet id="createJobCaptureLogTable" author="Dante Cesar Basso Filho">
        <createTable tableName="job_capture_log">
            <column name="id" type="UUID">
                <constraints primaryKey="true" nullable="false"/>
            </column>
            <column name="date" type="DATE">
                <constraints nullable="false"/>
            </column>
            <column name="date_time" type="TIMESTAMP">
                <constraints nullable="false"/>
            </column>
            <column name="content" type="TEXT">
                <constraints nullable="true"/>
            </column>
            <column name="curl" type="VARCHAR(6000)">
                <constraints nullable="false"/>
            </column>
            <column name="status" type="VARCHAR(255)">
                <constraints nullable="false"/>
            </column>
            <column name="quantity_of_items_processed" type="INT">
                <constraints nullable="false"/>
            </column>
            <column name="job_name" type="VARCHAR(255)">
                <constraints nullable="false"/>
            </column>
            <column name="message" type="VARCHAR(2000)">
                <constraints nullable="false"/>
            </column>
        </createTable>
    </changeSet>

    <changeSet id="insertDimensionStore" author="Dante Basso">
        <sql>
            INSERT INTO dimension_store (id, name)
            VALUES (gen_random_uuid(), 'Vis√£o Vip');
        </sql>
    </changeSet>

    <changeSet id="insertBrands" author="Dante Basso">
        <sql>
            <![CDATA[
            INSERT INTO dimension_brand (id, name) VALUES
            ('550e8400-e29b-41d4-a716-446655440000', 'Outra Marca'),
            (gen_random_uuid(), '3Nstar'),
            (gen_random_uuid(), 'ADATA'),
            (gen_random_uuid(), 'AFOX'),
            (gen_random_uuid(), 'Amazon'),
            (gen_random_uuid(), 'Acer'),
            (gen_random_uuid(), 'Aigo'),
            (gen_random_uuid(), 'AMD'),
            (gen_random_uuid(), 'APC'),
            (gen_random_uuid(), 'APS'),
            (gen_random_uuid(), 'Apple'),
            (gen_random_uuid(), 'Argom Tech'),
            (gen_random_uuid(), 'Arktek'),
            (gen_random_uuid(), 'Asrock'),
            (gen_random_uuid(), 'Asus'),
            (gen_random_uuid(), 'Asustor'),
            (gen_random_uuid(), 'Athomics'),
            (gen_random_uuid(), 'Az-america'),
            (gen_random_uuid(), 'Azza'),
            (gen_random_uuid(), 'Bak'),
            (gen_random_uuid(), 'Benq'),
            (gen_random_uuid(), 'Biostar'),
            (gen_random_uuid(), 'Blulory'),
            (gen_random_uuid(), 'Brother'),
            (gen_random_uuid(), 'Case Logic'),
            (gen_random_uuid(), 'Centronics'),
            (gen_random_uuid(), 'Cooler Master'),
            (gen_random_uuid(), 'Corsair'),
            (gen_random_uuid(), 'Cougar'),
            (gen_random_uuid(), 'Crucial'),
            (gen_random_uuid(), 'DarkFlash'),
            (gen_random_uuid(), 'Dahua'),
            (gen_random_uuid(), 'Denon'),
            (gen_random_uuid(), 'Dell'),
            (gen_random_uuid(), 'Dimension'),
            (gen_random_uuid(), 'Duex'),
            (gen_random_uuid(), 'Duosat'),
            (gen_random_uuid(), 'Ecopower'),
            (gen_random_uuid(), 'Encore'),
            (gen_random_uuid(), 'Epson'),
            (gen_random_uuid(), 'EVGA'),
            (gen_random_uuid(), 'Ezviz'),
            (gen_random_uuid(), 'FTX'),
            (gen_random_uuid(), 'Forza'),
            (gen_random_uuid(), 'Gainward'),
            (gen_random_uuid(), 'Galax'),
            (gen_random_uuid(), 'Gigabyte'),
            (gen_random_uuid(), 'GoLine'),
            (gen_random_uuid(), 'Google'),
            (gen_random_uuid(), 'Golink'),
            (gen_random_uuid(), 'Havit'),
            (gen_random_uuid(), 'Hiksemi'),
            (gen_random_uuid(), 'Hikvision'),
            (gen_random_uuid(), 'Honeywell'),
            (gen_random_uuid(), 'HP'),
            (gen_random_uuid(), 'HYE'),
            (gen_random_uuid(), 'Haylou'),
            (gen_random_uuid(), 'Hubble Connected'),
            (gen_random_uuid(), 'Hetzer'),
            (gen_random_uuid(), 'Hikvision'),
            (gen_random_uuid(), 'Honeywell'),
            (gen_random_uuid(), 'HTV'),
            (gen_random_uuid(), 'Huawei'),
            (gen_random_uuid(), 'HyperX'),
            (gen_random_uuid(), 'Ibest'),
            (gen_random_uuid(), 'Imilab'),
            (gen_random_uuid(), 'Infosec'),
            (gen_random_uuid(), 'Intel'),
            (gen_random_uuid(), 'Interbras'),
            (gen_random_uuid(), 'JBL'),
            (gen_random_uuid(), 'JVC'),
            (gen_random_uuid(), 'Keepdata'),
            (gen_random_uuid(), 'Kingspec'),
            (gen_random_uuid(), 'Kingston'),
            (gen_random_uuid(), 'Klip'),
            (gen_random_uuid(), 'Kolke'),
            (gen_random_uuid(), 'LG'),
            (gen_random_uuid(), 'Lian Li'),
            (gen_random_uuid(), 'Linksys'),
            (gen_random_uuid(), 'Logitech'),
            (gen_random_uuid(), 'Macrovip'),
            (gen_random_uuid(), 'Mannatech'),
            (gen_random_uuid(), 'Manhattan'),
            (gen_random_uuid(), 'Markvision'),
            (gen_random_uuid(), 'Mercusys'),
            (gen_random_uuid(), 'Microfins'),
            (gen_random_uuid(), 'Micron'),
            (gen_random_uuid(), 'Microsoft'),
            (gen_random_uuid(), 'Mikrotik'),
            (gen_random_uuid(), 'Msi'),
            (gen_random_uuid(), 'Multilaser'),
            (gen_random_uuid(), 'Motorola'),
            (gen_random_uuid(), 'MTek'),
            (gen_random_uuid(), 'Nexxt'),
            (gen_random_uuid(), 'Nokia'),
            (gen_random_uuid(), 'Onida'),
            (gen_random_uuid(), 'Onkyo'),
            (gen_random_uuid(), 'Palit'),
            (gen_random_uuid(), 'Panasonic'),
            (gen_random_uuid(), 'Patriot'),
            (gen_random_uuid(), 'Philips'),
            (gen_random_uuid(), 'PNY'),
            (gen_random_uuid(), 'Quanta'),
            (gen_random_uuid(), 'QNAP'),
            (gen_random_uuid(), 'Razer'),
            (gen_random_uuid(), 'Redragon'),
            (gen_random_uuid(), 'Roku'),
            (gen_random_uuid(), 'Samsung'),
            (gen_random_uuid(), 'Sandisk'),
            (gen_random_uuid(), 'Satellite'),
            (gen_random_uuid(), 'Sapphire'),
            (gen_random_uuid(), 'Seagate'),
            (gen_random_uuid(), 'Shure'),
            (gen_random_uuid(), 'Sony'),
            (gen_random_uuid(), 'Star'),
            (gen_random_uuid(), 'Synology'),
            (gen_random_uuid(), 'Targus'),
            (gen_random_uuid(), 'Tek'),
            (gen_random_uuid(), 'Thermaltake'),
            (gen_random_uuid(), 'Tigre'),
            (gen_random_uuid(), 'Toshiba'),
            (gen_random_uuid(), 'Tp-link'),
            (gen_random_uuid(), 'Unnion'),
            (gen_random_uuid(), 'Unifi'),
            (gen_random_uuid(), 'UPS'),
            (gen_random_uuid(), 'Viewsonic'),
            (gen_random_uuid(), 'Western'),
            (gen_random_uuid(), 'WiWu'),
            (gen_random_uuid(), 'XFX'),
            (gen_random_uuid(), 'Yamaha'),
            (gen_random_uuid(), 'Xiaomi'),
            (gen_random_uuid(), 'Xtech'),
            (gen_random_uuid(), 'Zebra'),
            (gen_random_uuid(), 'Zkteco'),
            (gen_random_uuid(), 'Zotac');
        ]]>
        </sql>
    </changeSet>

    <changeSet id="insertDimensionDate" author="Dante Basso">
        <sql splitStatements="false">
        <![CDATA[
        DO $$ DECLARE
            current_day DATE := current_date;
            meses_portugues VARCHAR[] := ARRAY['Janeiro', 'Fevereiro', 'Mar√ßo', 'Abril', 'Maio', 'Junho', 'Julho', 'Agosto', 'Setembro', 'Outubro', 'Novembro', 'Dezembro'];
            dias_da_semana_portugues VARCHAR[] := ARRAY['Domingo', 'Segunda-feira', 'Ter√ßa-feira', 'Quarta-feira', 'Quinta-feira', 'Sexta-feira', 'S√°bado'];
        BEGIN
            FOR i IN 1..3650 LOOP
                INSERT INTO dimension_date (id, date, day, month, year, month_full, month_year, full_date, day_of_week)
                VALUES
                (gen_random_uuid(), current_day, EXTRACT(DAY FROM current_day), EXTRACT(MONTH FROM current_day), EXTRACT(YEAR FROM current_day),
                 meses_portugues[EXTRACT(MONTH FROM current_day)], to_char(current_day, 'MMYYYY'), to_char(current_day, 'DDMMYYYY'),
                dias_da_semana_portugues[EXTRACT(DOW FROM current_day) + 1]); -- Adicionamos 1 pois os arrays em PostgreSQL s√£o baseados em 1

                current_day := current_day + 1;
            END LOOP;
        END $$;
        ]]>
        </sql>
    </changeSet>

    <changeSet id="insertDimensionStoreTopdek" author="Dante Basso">
        <sql>
            INSERT INTO dimension_store (id, name)
            VALUES (gen_random_uuid(), 'Topdek');
        </sql>
    </changeSet>

    <changeSet id="insertBrands18032024" author="Dante Basso">
        <sql>
            <![CDATA[
            INSERT INTO dimension_brand (id, name) VALUES
            (gen_random_uuid(), 'Xtreme Level'),
            (gen_random_uuid(), 'Casio'),
            (gen_random_uuid(), 'Trust'),
            (gen_random_uuid(), 'GoPro'),
            (gen_random_uuid(), 'Baseou'),
            (gen_random_uuid(), 'Walkers'),
            (gen_random_uuid(), 'Satechi'),
            (gen_random_uuid(), 'Belkin'),
            (gen_random_uuid(), 'Anker'),
            (gen_random_uuid(), 'Only'),
            (gen_random_uuid(), 'Honor'),
            (gen_random_uuid(), 'Realme'),
            (gen_random_uuid(), 'Xbox'),
            (gen_random_uuid(), 'T-Dagger'),
            (gen_random_uuid(), 'Master'),
            (gen_random_uuid(), 'Keen'),
            (gen_random_uuid(), 'Mibro'),
            (gen_random_uuid(), 'QCY'),
            (gen_random_uuid(), 'Igloo'),
            (gen_random_uuid(), 'Bematech'),
            (gen_random_uuid(), 'Pantum'),
            (gen_random_uuid(), 'Unitech'),
            (gen_random_uuid(), 'Fifine'),
            (gen_random_uuid(), 'Gmktec'),
            (gen_random_uuid(), 'TCB'),
            (gen_random_uuid(), 'SteelSeries'),
            (gen_random_uuid(), 'Marvo'),
            (gen_random_uuid(), 'Alienware'),
            (gen_random_uuid(), 'Lenovo'),
            (gen_random_uuid(), 'Thermalright'),
            (gen_random_uuid(), 'Grandstream'),
            (gen_random_uuid(), 'Infocus'),
            (gen_random_uuid(), 'Alphasat'),
            (gen_random_uuid(), 'BTV'),
            (gen_random_uuid(), 'MXQ'),
            (gen_random_uuid(), 'Lexar'),
            (gen_random_uuid(), 'Nextorage'),
            (gen_random_uuid(), 'HC Premium'),
            (gen_random_uuid(), 'Advance'),
            (gen_random_uuid(), 'TCK'),
            (gen_random_uuid(), 'Viewtech'),
            (gen_random_uuid(), 'View Tech'),
            (gen_random_uuid(), 'Ion'),
            (gen_random_uuid(), 'Aiwa'),
            (gen_random_uuid(), 'SPEED'),
            (gen_random_uuid(), 'Hyundai'),
            (gen_random_uuid(), 'LUO'),
            (gen_random_uuid(), 'GREE'),
            (gen_random_uuid(), 'Arduino'),
            (gen_random_uuid(), 'Britania'),
            (gen_random_uuid(), 'Foston'),
            (gen_random_uuid(), 'UP Gamer'),
            (gen_random_uuid(), 'Mitsuo'),
            (gen_random_uuid(), 'MOX'),
            (gen_random_uuid(), 'SATE'),
            (gen_random_uuid(), 'SHARP'),
            (gen_random_uuid(), 'Truly'),
            (gen_random_uuid(), 'Hilook'),
            (gen_random_uuid(), 'Playgame'),
            (gen_random_uuid(), '4Life'),
            (gen_random_uuid(), 'Stanley'),
            (gen_random_uuid(), 'DJI'),
            (gen_random_uuid(), 'Narken'),
            (gen_random_uuid(), 'Funko'),
            (gen_random_uuid(), 'GameMax'),
            (gen_random_uuid(), 'WD'),
            (gen_random_uuid(), 'Macroway'),
            (gen_random_uuid(), 'K-Mex'),
            (gen_random_uuid(), 'Kodak'),
            (gen_random_uuid(), 'Xion'),
            (gen_random_uuid(), 'Rodicar'),
            (gen_random_uuid(), 'Pintamax'),
            (gen_random_uuid(), 'Vizzion'),
            (gen_random_uuid(), 'Zemismart'),
            (gen_random_uuid(), 'Magnavox'),
            (gen_random_uuid(), 'GlobalSat'),
            (gen_random_uuid(), 'Iuron'),
            (gen_random_uuid(), 'UBNT'),
            (gen_random_uuid(), 'Totolink'),
            (gen_random_uuid(), 'Tenda'),
            (gen_random_uuid(), 'Intelbras'),
            (gen_random_uuid(), 'C3Tech'),
            (gen_random_uuid(), 'Multilaser'),
            (gen_random_uuid(), 'Elgin'),
            (gen_random_uuid(), 'Pulse'),
            (gen_random_uuid(), 'Pioneer'),
            (gen_random_uuid(), 'Prolink'),
            (gen_random_uuid(), 'Yunmai'),
            (gen_random_uuid(), 'Mondial'),
            (gen_random_uuid(), 'Midea'),
            (gen_random_uuid(), 'Philco'),
            (gen_random_uuid(), 'Brit√¢nia'),
            (gen_random_uuid(), 'Electrolux'),
            (gen_random_uuid(), 'Consul'),
            (gen_random_uuid(), 'Brastemp'),
            (gen_random_uuid(), 'AOC'),
            (gen_random_uuid(), 'TCL'),
            (gen_random_uuid(), 'Semp'),
            (gen_random_uuid(), 'CCE'),
            (gen_random_uuid(), 'Positivo'),
            (gen_random_uuid(), 'Fujitsu'),
            (gen_random_uuid(), 'Napoli'),
            (gen_random_uuid(), 'Raiovac'),
            (gen_random_uuid(), 'Energizer'),
            (gen_random_uuid(), 'Duracell'),
            (gen_random_uuid(), 'Tianqiu'),
            (gen_random_uuid(), 'Life pod'),
            (gen_random_uuid(), 'SONOFF'),
            (gen_random_uuid(), 'UP-GAMER'),
            (gen_random_uuid(), 'Mitsuo'),
            (gen_random_uuid(), 'KISONLI'),
            (gen_random_uuid(), 'Argom'),
            (gen_random_uuid(), 'Maxprint'),
            (gen_random_uuid(), 'Maxell'),
            (gen_random_uuid(), 'Maxtor'),
            (gen_random_uuid(), 'Maxxter'),
            (gen_random_uuid(), 'Sanrenxing'),
            (gen_random_uuid(), 'Shenghongbo'),
            (gen_random_uuid(), 'Malibeibei'),
            (gen_random_uuid(), 'Hetz'),
            (gen_random_uuid(), 'Pixxo'),
            (gen_random_uuid(), 'Colorful'),
            (gen_random_uuid(), 'Inno3d'),
            (gen_random_uuid(), 'Silhouette'),
            (gen_random_uuid(), 'Hamilton Beach'),
            (gen_random_uuid(), 'D-Link'),
            (gen_random_uuid(), 'Wiami'),
            (gen_random_uuid(), 'Wacom'),
            (gen_random_uuid(), 'WiseCase'),
            (gen_random_uuid(), 'Shark'),
            (gen_random_uuid(), 'Sennheiser'),
            (gen_random_uuid(), 'Semp Toshiba'),
            (gen_random_uuid(), 'Semp TCL'),
            (gen_random_uuid(), 'XPG'),
            (gen_random_uuid(), 'Checkpoint'),
            (gen_random_uuid(), 'Raspberry');
            ]]>
        </sql>
    </changeSet>

    <changeSet id="addUniqueConstraintOnNameColumn" author="Dante Basso">
        <addUniqueConstraint tableName="dimension_brand" columnNames="name" constraintName="unique_brand_name"/>
    </changeSet>

</databaseChangeLog>
